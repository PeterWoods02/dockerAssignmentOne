#version: '3'
networks:
   assignment-network: #API,REDIS
   API-network:   #API,MongoDB
   database-network: #MongoDB, mongoExpress

services:
  api:
    image: doconnor/movies-api:1.0
    container_name: movies-api
    ports:
      - '9000:9000'
    environment:
      - MONGODB_URI=mongodb://admin:secret@database:27017
      - ENABLE_WRITING_HANDLERS=false
      - REDIS_URI=redis://redis-server:6379
    networks:
      - assignment-network
      - API-network
    depends_on:
      - database
      - redis
  
  database:
    container_name: mongoDB
    image: mongo:8.0-rc
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    networks:
      - API-network
      - database-network
    volumes:    
      - moviedata:/data/db

  mongo-express:
    container_name: express
    image: mongo-express:1.0-20-alpine3.19
    restart: always
    ports:
      - '8080:8081'
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=secret
      - ME_CONFIG_MONGODB_SERVER=database
    networks:
      - database-network
    depends_on:
      - database
    profiles:
      - dev

  redis:
    image: redis:alpine
    container_name: redis-server 
    networks:  
      - assignment-network

  mongodb-seed:
    image: mongo:8.0-rc
    container_name: mongodb-seed
    depends_on:
      - database
    volumes:
      - ./seeding.json:/mongodb-init/seeding.json
    networks:
      - database-network
    links:
      - database
    command:
      mongoimport --host database --db tmdb_movies --collection movies --authenticationDatabase admin --username ${MONGODB_USERNAME} --password ${MONGODB_PASSWORD} --drop --jsonArray --file /mongodb-init/seeding.json
    profiles:
      - dev
volumes:
  moviedata:
